// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: center_type.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "center_type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace libevrpc {

namespace {

const ::google::protobuf::EnumDescriptor* CenterType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_center_5ftype_2eproto() {
  protobuf_AddDesc_center_5ftype_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "center_type.proto");
  GOOGLE_CHECK(file != NULL);
  CenterType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_center_5ftype_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void protobuf_ShutdownFile_center_5ftype_2eproto() {
}

void protobuf_AddDesc_center_5ftype_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021center_type.proto\022\010libevrpc*F\n\nCenterT"
    "ype\022\021\n\rCENTER2CENTER\020d\022\021\n\rCENTER2CLIENT\020"
    "e\022\022\n\016CENTER2CLUSTER\020f", 101);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "center_type.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_center_5ftype_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_center_5ftype_2eproto {
  StaticDescriptorInitializer_center_5ftype_2eproto() {
    protobuf_AddDesc_center_5ftype_2eproto();
  }
} static_descriptor_initializer_center_5ftype_2eproto_;
const ::google::protobuf::EnumDescriptor* CenterType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CenterType_descriptor_;
}
bool CenterType_IsValid(int value) {
  switch(value) {
    case 100:
    case 101:
    case 102:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace libevrpc

// @@protoc_insertion_point(global_scope)
